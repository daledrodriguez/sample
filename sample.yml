---
- name: Automated Security Hardening
  hosts: all
  become: yes
  tasks:
    # Task 1: Configure firewall rules
    - name: Configure firewall rules
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items:
        - 22  # SSH
        - 80  # HTTP
        - 443 # HTTPS

    # Task 2: Disable unnecessary services
    - name: Disable unnecessary services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      with_items:
        - telnet
        - ftp

    # Task 3: Enable security features (e.g., AppArmor)
    - name: Enable AppArmor
      apt:
        name: apparmor
        state: present
      become: yes

    - name: Load AppArmor profiles
      command: aa-enforce /etc/apparmor.d/{{ item }}
      with_items:
        - usr.sbin.nginx
        - usr.sbin.mysql

    # Task 4: Apply operating system security patches
    - name: Apply operating system security patches
      apt:
        update_cache: yes
        upgrade: dist
      become: yes

- name: Patch Management
  hosts: all
  become: yes
  tasks:
    # Task 5: Check for available updates
    - name: Check for available updates
      apt:
        update_cache: yes
        list: yes

    # Task 6: Download and apply patches
    - name: Download and apply patches
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - linux-generic
        - linux-headers-generic
        - linux-image-generic
      become: yes

- name: Configuration Management
  hosts: all
  become: yes
  tasks:
    # Task 7: Enforce secure configuration settings
    - name: Set secure SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^PasswordAuthentication', line: 'PasswordAuthentication no' }
        - { regexp: '^X11Forwarding', line: 'X11Forwarding no' }
      notify: restart sshd

  handlers:
    - name: restart sshd
      service: name=ssh state=restarted

- name: Continuous Compliance Monitoring
  hosts: all
  become: yes
  tasks:
    # Task 8: Monitor system configurations against security standards (example: CIS benchmarks)
    - name: Download and apply CIS benchmarks
      get_url:
        url: "https://example.com/cis-benchmarks-ubuntu.yml"
        dest: "/etc/ansible/cis-benchmarks-ubuntu.yml"

    - name: Apply CIS benchmarks
      include_vars: "/etc/ansible/cis-benchmarks-ubuntu.yml"

- name: Secure Software Deployment
  hosts: all
  become: yes
  tasks:
    # Task 9: Automate deployment of software updates and patches (example: Nginx)
    - name: Install Nginx
      apt:
        name: nginx
        state: present
      become: yes
